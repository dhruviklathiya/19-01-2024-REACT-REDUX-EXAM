{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\n// import { data } from '../data';\nimport Swal from 'sweetalert2';\nimport Cookies from 'js-cookie';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GET_PROFILE_PROCESS } from '../redux-saga/user/action';\nconst Login = () => {\n  _s();\n  // Retrieve data from localStorage or use an empty array if not present\n\n  const abc = useSelector(state => state.profile_reducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: GET_PROFILE_PROCESS\n    });\n  }, []);\n  localStorage.setItem(\"Data\", JSON.stringify(abc.profile_data));\n  const storedData = JSON.parse(localStorage.getItem(\"Data\")) || [];\n  const userName = useRef();\n  const password = useRef();\n  const role = useRef();\n\n  // const login = () => {\n  //     const input = {\n  //         userName: userName.current.value,\n  //         password: password.current.value,\n  //         role: role.current.value,\n  //     };\n  //     // Check if input matches any object in the stored data\n  //     const isMatch = storedData.some(obj => areObjectsEqual(obj, input));\n\n  //     if (isMatch) {\n  //         Swal.fire({\n  //             title: \"Login successfully !\",\n  //             text: \"You clicked the button!\",\n  //             icon: \"success\"\n  //         })\n  //         Cookies.set(\"User\", input.userName)\n  //         Cookies.set(\"Password\", input.password)\n  //         Cookies.set(\"Role\", input.role)\n  //         window.location.href = \"http://localhost:3000/dashboard\"\n  //         // Perform additional actions for successful login\n  //     } else {\n  //         Swal.fire({\n  //             icon: \"Wrong username or password\",\n  //             title: \"Oops...\",\n  //             text: \"Something went wrong!\",\n  //             footer: '<a href=\"#\">Why do I have this issue?</a>'\n  //         })\n  //     }\n  // };\n\n  // // Function to compare two objects\n  // const areObjectsEqual = (obj1, obj2) => {\n  //     for (let key in obj1) {\n  //         if (obj1.hasOwnProperty(key) !== obj2.hasOwnProperty(key) ||\n  //             obj1[key] !== obj2[key]) {\n  //             return false;\n  //         }\n  //     }\n\n  //     for (let key in obj2) {\n  //         if (obj2.hasOwnProperty(key) !== obj1.hasOwnProperty(key)) {\n  //             return false;\n  //         }\n  //     }\n\n  //     return true;\n  // };\n\n  // return (\n  //     <>\n  //         <div className=\"wrapper\">\n  //             <div class=\"logo\">\n  //                 <img src=\"https://www.freepnglogos.com/uploads/twitter-logo-png/twitter-bird-symbols-png-logo-0.png\" alt=\"\" />\n  //             </div>\n  //             <div class=\"text-center mt-4 name\">\n  //                 Shop online\n  //             </div>\n  //             {/* <form class=\"p-3 mt-3\"> */}\n  //             <div class=\"form-field d-flex align-items-center\">\n  //                 <span class=\"far fa-user\"></span>\n  //                 <input type=\"text\" name=\"userName\" ref={userName} id=\"userName\" placeholder=\"Username\" />\n  //             </div>\n  //             <div class=\"form-field d-flex align-items-center\">\n  //                 <span class=\"fas fa-key\"></span>\n  //                 <input type=\"password\" name=\"password\" ref={password} id=\"pwd\" placeholder=\"Password\" />\n  //             </div>\n  //             <div class=\"form-field d-flex align-items-center\">\n  //                 <span class=\"fas fa-key\"></span>\n  //                 <input type=\"role\" name=\"role\" ref={role} id=\"role\" placeholder=\"Role\" />\n  //             </div>\n  //             <button class=\"btn mt-3\" onClick={login}>Login</button>\n  //             {/* </form> */}\n  //             <div class=\"text-center fs-6\">\n  //                 {/* <a href=\"#\">Forget password?</a> or <a href=\"#\">Sign up</a> */}\n  //             </div>\n  //         </div>\n  //     </>\n  // );\n};\n_s(Login, \"99zKdg0nMb3Jk2/SA0orCkIpjVg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useRef","Swal","Cookies","useDispatch","useSelector","GET_PROFILE_PROCESS","Login","_s","abc","state","profile_reducer","dispatch","type","localStorage","setItem","JSON","stringify","profile_data","storedData","parse","getItem","userName","password","role","_c","$RefreshReg$"],"sources":["/Users/dhruviklathiya/Desktop/D CODER/09 React js/Project_practice/exam_redux/src/Component/Login.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n// import { data } from '../data';\nimport Swal from 'sweetalert2';\nimport Cookies from 'js-cookie';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GET_PROFILE_PROCESS } from '../redux-saga/user/action';\n\nconst Login = () => {\n    // Retrieve data from localStorage or use an empty array if not present\n\n    const abc = useSelector((state) => state.profile_reducer)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch({ type: GET_PROFILE_PROCESS })\n    }, [])\n\n    localStorage.setItem(\"Data\", JSON.stringify(abc.profile_data))\n\n\n    const storedData = JSON.parse(localStorage.getItem(\"Data\")) || [];\n\n    const userName = useRef();\n    const password = useRef();\n    const role = useRef();\n\n    // const login = () => {\n    //     const input = {\n    //         userName: userName.current.value,\n    //         password: password.current.value,\n    //         role: role.current.value,\n    //     };\n    //     // Check if input matches any object in the stored data\n    //     const isMatch = storedData.some(obj => areObjectsEqual(obj, input));\n\n    //     if (isMatch) {\n    //         Swal.fire({\n    //             title: \"Login successfully !\",\n    //             text: \"You clicked the button!\",\n    //             icon: \"success\"\n    //         })\n    //         Cookies.set(\"User\", input.userName)\n    //         Cookies.set(\"Password\", input.password)\n    //         Cookies.set(\"Role\", input.role)\n    //         window.location.href = \"http://localhost:3000/dashboard\"\n    //         // Perform additional actions for successful login\n    //     } else {\n    //         Swal.fire({\n    //             icon: \"Wrong username or password\",\n    //             title: \"Oops...\",\n    //             text: \"Something went wrong!\",\n    //             footer: '<a href=\"#\">Why do I have this issue?</a>'\n    //         })\n    //     }\n    // };\n\n    // // Function to compare two objects\n    // const areObjectsEqual = (obj1, obj2) => {\n    //     for (let key in obj1) {\n    //         if (obj1.hasOwnProperty(key) !== obj2.hasOwnProperty(key) ||\n    //             obj1[key] !== obj2[key]) {\n    //             return false;\n    //         }\n    //     }\n\n    //     for (let key in obj2) {\n    //         if (obj2.hasOwnProperty(key) !== obj1.hasOwnProperty(key)) {\n    //             return false;\n    //         }\n    //     }\n\n    //     return true;\n    // };\n\n    // return (\n    //     <>\n    //         <div className=\"wrapper\">\n    //             <div class=\"logo\">\n    //                 <img src=\"https://www.freepnglogos.com/uploads/twitter-logo-png/twitter-bird-symbols-png-logo-0.png\" alt=\"\" />\n    //             </div>\n    //             <div class=\"text-center mt-4 name\">\n    //                 Shop online\n    //             </div>\n    //             {/* <form class=\"p-3 mt-3\"> */}\n    //             <div class=\"form-field d-flex align-items-center\">\n    //                 <span class=\"far fa-user\"></span>\n    //                 <input type=\"text\" name=\"userName\" ref={userName} id=\"userName\" placeholder=\"Username\" />\n    //             </div>\n    //             <div class=\"form-field d-flex align-items-center\">\n    //                 <span class=\"fas fa-key\"></span>\n    //                 <input type=\"password\" name=\"password\" ref={password} id=\"pwd\" placeholder=\"Password\" />\n    //             </div>\n    //             <div class=\"form-field d-flex align-items-center\">\n    //                 <span class=\"fas fa-key\"></span>\n    //                 <input type=\"role\" name=\"role\" ref={role} id=\"role\" placeholder=\"Role\" />\n    //             </div>\n    //             <button class=\"btn mt-3\" onClick={login}>Login</button>\n    //             {/* </form> */}\n    //             <div class=\"text-center fs-6\">\n    //                 {/* <a href=\"#\">Forget password?</a> or <a href=\"#\">Sign up</a> */}\n    //             </div>\n    //         </div>\n    //     </>\n    // );\n};\n\nexport default Login;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD;AACA,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,2BAA2B;AAE/D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;;EAEA,MAAMC,GAAG,GAAGJ,WAAW,CAAEK,KAAK,IAAKA,KAAK,CAACC,eAAe,CAAC;EACzD,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACZY,QAAQ,CAAC;MAAEC,IAAI,EAAEP;IAAoB,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAENQ,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,GAAG,CAACS,YAAY,CAAC,CAAC;EAG9D,MAAMC,UAAU,GAAGH,IAAI,CAACI,KAAK,CAACN,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;EAEjE,MAAMC,QAAQ,GAAGrB,MAAM,CAAC,CAAC;EACzB,MAAMsB,QAAQ,GAAGtB,MAAM,CAAC,CAAC;EACzB,MAAMuB,IAAI,GAAGvB,MAAM,CAAC,CAAC;;EAErB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;AAACO,EAAA,CAjGID,KAAK;EAAA,QAGKF,WAAW,EACND,WAAW;AAAA;AAAAqB,EAAA,GAJ1BlB,KAAK;AAmGX,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}